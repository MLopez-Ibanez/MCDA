/* ************************ */
/* ****** parameters ****** */
/* ************************ */
/* alternatives */
param X;
/* criteria */
param F;
/* criteria preference direction*/
param Fdir{i in 1..F};
/* criteria min*/
param Fmin{i in 1..F};
/* criteria max*/
param Fmax{i in 1..F};
/* categories */
param K;
/* assignments */
param A{x in 1..X};
/* performance table - alternatives */
param PTx{x in 1..X, i in 1..F};
/* separation for inequalities and parameters */
param gamma;
/* *********************** */
/* ****** variables ****** */
/* *********************** */
/* majority threshold */
var lambda >= 0.5, <= 1;
/* weights */
var w{i in 1..F} >=0, <=1;
/* performance table - profiles */
var PTk{k in 1..(K+1), i in 1..F};
/* local concordance to upper profile */
var lCupp{x in 1..X, i in 1..F} binary;
/* local concordance to lower profile */
var lClow{x in 1..X, i in 1..F} binary;
/* weighted local concordance to upper profile */
var wlCupp{x in 1..X, i in 1..F};
/* weighted local concordance to lower profile */
var wlClow{x in 1..X, i in 1..F};
/* distances between weights */
var delta1{i in 1..(F-1), j in (i+1)..F} >= 0;
var delta2{i in 1..(F-1), j in (i+1)..F} >= 0;
/* ******************************** */
/* ****** objective function ****** */
/* ******************************** */
minimize obj: sum{i in 1..(F-1), j in (i+1)..F}(delta1[i,j] + delta2[i,j]);
/* ************************* */
/* ****** constraints ****** */
/* ************************* */
/* normalized weights */
s.t. normalisedWeights: sum{i in 1..F} w[i] = 1;
/* constrain profile values */
s.t. bottomP{i in 1..F}: PTk[K+1,i] = (Fmax[i] + gamma) * (1 - Fdir[i]) / 2 + (Fmin[i] - gamma) * (Fdir[i] + 1) / 2;
s.t. topP{i in 1..F}: PTk[1,i] = (Fmax[i] + gamma) * (Fdir[i] + 1) / 2 + (Fmin[i] - gamma) * (1 - Fdir[i]) / 2;
/* distance between weights */
s.t. distanceWeights{i in 1..(F-1), j in (i+1)..F}: w[i] - w[j] = delta1[i,j] - delta2[i,j];
/* constraints on the local concordance */
s.t. lCupp1{x in 1..X, i in 1.. F}: Fdir[i] * (PTx[x,i] - PTk[A[x],i]) + gamma <= lCupp[x,i] * (Fmax[i] - Fmin[i] + 1);
s.t. lCupp2{x in 1..X, i in 1.. F}: (lCupp[x,i] - 1) * (Fmax[i] - Fmin[i] + 1) <= Fdir[i] * (PTx[x,i] - PTk[A[x],i]);
s.t. lClow1{x in 1..X, i in 1.. F}: Fdir[i] * (PTx[x,i] - PTk[A[x]+1,i]) + gamma <= lClow[x,i] * (Fmax[i] - Fmin[i] + 1);
s.t. lClow2{x in 1..X, i in 1.. F}: (lClow[x,i] - 1) * (Fmax[i] - Fmin[i] + 1) <= Fdir[i] * (PTx[x,i] - PTk[A[x]+1,i]);
/* constraints on the weighted local concordance */
s.t. wlCupp1{x in 1..X, i in 1..F}: wlCupp[x,i] <= w[i];
s.t. wlCupp2{x in 1..X, i in 1..F}: 0 <= wlCupp[x,i];
s.t. wlCupp3{x in 1..X, i in 1..F}: wlCupp[x,i] <= lCupp[x,i];
s.t. wlCupp4{x in 1..X, i in 1..F}: lCupp[x,i] + w[i] - 1 <= wlCupp[x,i];
s.t. wlClow1{x in 1..X, i in 1..F}: wlClow[x,i] <= w[i];
s.t. wlClow2{x in 1..X, i in 1..F}: 0 <= wlClow[x,i];
s.t. wlClow3{x in 1..X, i in 1..F}: wlClow[x,i] <= lClow[x,i];
s.t. wlClow4{x in 1..X, i in 1..F}: lClow[x,i] + w[i] - 1 <= wlClow[x,i];
/* dominance between profiles */
s.t. dominance{k in 1..K, i in 1..F}: Fdir[i] * PTk[(k+1),i] <= Fdir[i] * PTk[k,i]; 
/* alternative outranks lower profile */
s.t. Slow{x in 1..X}: lambda <= sum{i in 1..F} wlClow[x,i];
/* alternative does not outrank upper profile */
s.t. Supp{x in 1..X}: sum{i in 1..F} wlCupp[x,i] + gamma <= lambda;

solve;
